package cs3744.pr1;

import cs3744.pr1.Shape.ShapeType;
import javafx.beans.value.ObservableValue;
import javafx.scene.control.Slider;
import javafx.scene.control.Toggle;
import javafx.scene.control.ToggleButton;
import javafx.scene.control.ToggleGroup;import javafx.scene.transform.Scale;

/**
 * This class handles all actions generated by the toolbar.
 *
 */
public class ToolbarController {
	
	private PropertiesController props = null;
	
	public ToolbarController(ToggleGroup shapes, 
			ToggleButton shapeCircle, ToggleButton shapeOval, 
			ToggleButton shapeRect, ToggleButton shapeRoundRect, 
			ToggleButton shapeText, Slider zoomSlider, PropertiesController properties) {
		this.props = properties;
		props.zoomSlider = zoomSlider;
		props.zoomSlider.setDisable(true);
		
		shapeCircle.setUserData(ShapeType.CIRCLE);
		shapeOval.setUserData(ShapeType.OVAL);
		shapeRect.setUserData(ShapeType.RECT);
		shapeRoundRect.setUserData(ShapeType.ROUND_RECT);
		shapeText.setUserData(ShapeType.TEXT);
		
		// Add event listener to radio buttons.
		shapes.selectedToggleProperty().addListener((ObservableValue<? extends Toggle> ov,
        Toggle oldToggle, Toggle newToggle) -> {
        	switch ((ShapeType)shapes.getSelectedToggle().getUserData()) {
        		case CIRCLE:
        			props.defaultShape = ShapeType.CIRCLE;
        			break;
        		case OVAL:
        			props.defaultShape = ShapeType.OVAL;
        			break;
        		case RECT:
        			props.defaultShape = ShapeType.RECT;
        			break;
        		case ROUND_RECT:
        			props.defaultShape = ShapeType.ROUND_RECT;
        			break;
        		case TEXT:
        			props.defaultShape = ShapeType.TEXT;
        			break;
        	}
        });
		
		// Add event listener to the zoom slider.
		zoomSlider.valueProperty().addListener((ObservableValue<? extends Number> ov,
				Number oldValue, Number newValue) -> {
        	props.canvas.getCanvas().getTransforms().setAll(new Scale((double)newValue, (double)newValue, 1));
        });
	}

}
